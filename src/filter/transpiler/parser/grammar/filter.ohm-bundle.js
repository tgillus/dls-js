import { makeRecipe } from 'ohm-js';
const result = makeRecipe([
  'grammar',
  {
    source:
      'Filter {\n  FilterExp\n    = Fragment\n  \n  Fragment\n    = Fragment compoundOp Fragment  -- compound\n    | CategoryFragment\n    | CompareFragment\n  \n  CategoryFragment\n    = "current" categoryOp bool\n  \n  CompareFragment\n    = startDate compareOp date\n\n  compoundOp\n    = and\n    | or\n\n  startDate\n    = caseInsensitive<"startDate">\n\n  categoryOp\n    = "="\n    | "!="\n\n  compareOp\n    = ">="\n    | ">"\n    | "<="\n    | "<"\n\n  bool\n    = true\n    | false\n  \n  date\n    = digit digit digit digit "-" digit digit "-" digit digit\n  \n  and\n    = caseInsensitive<"and">\n\n  or\n    = caseInsensitive<"or">\n  \n  true\n    = caseInsensitive<"true">\n\n  false\n    = caseInsensitive<"false">\n}',
  },
  'Filter',
  null,
  'FilterExp',
  {
    FilterExp: [
      'define',
      { sourceInterval: [11, 35] },
      null,
      [],
      ['app', { sourceInterval: [27, 35] }, 'Fragment', []],
    ],
    Fragment_compound: [
      'define',
      { sourceInterval: [56, 97] },
      null,
      [],
      [
        'seq',
        { sourceInterval: [56, 84] },
        ['app', { sourceInterval: [56, 64] }, 'Fragment', []],
        ['app', { sourceInterval: [65, 75] }, 'compoundOp', []],
        ['app', { sourceInterval: [76, 84] }, 'Fragment', []],
      ],
    ],
    Fragment: [
      'define',
      { sourceInterval: [41, 142] },
      null,
      [],
      [
        'alt',
        { sourceInterval: [56, 142] },
        ['app', { sourceInterval: [56, 84] }, 'Fragment_compound', []],
        ['app', { sourceInterval: [104, 120] }, 'CategoryFragment', []],
        ['app', { sourceInterval: [127, 142] }, 'CompareFragment', []],
      ],
    ],
    CategoryFragment: [
      'define',
      { sourceInterval: [148, 196] },
      null,
      [],
      [
        'seq',
        { sourceInterval: [171, 196] },
        ['terminal', { sourceInterval: [171, 180] }, 'current'],
        ['app', { sourceInterval: [181, 191] }, 'categoryOp', []],
        ['app', { sourceInterval: [192, 196] }, 'bool', []],
      ],
    ],
    CompareFragment: [
      'define',
      { sourceInterval: [202, 248] },
      null,
      [],
      [
        'seq',
        { sourceInterval: [224, 248] },
        ['app', { sourceInterval: [224, 233] }, 'startDate', []],
        ['app', { sourceInterval: [234, 243] }, 'compareOp', []],
        ['app', { sourceInterval: [244, 248] }, 'date', []],
      ],
    ],
    compoundOp: [
      'define',
      { sourceInterval: [252, 281] },
      null,
      [],
      [
        'alt',
        { sourceInterval: [269, 281] },
        ['app', { sourceInterval: [269, 272] }, 'and', []],
        ['app', { sourceInterval: [279, 281] }, 'or', []],
      ],
    ],
    startDate: [
      'define',
      { sourceInterval: [285, 329] },
      null,
      [],
      [
        'app',
        { sourceInterval: [301, 329] },
        'caseInsensitive',
        [['terminal', { sourceInterval: [317, 328] }, 'startDate']],
      ],
    ],
    categoryOp: [
      'define',
      { sourceInterval: [333, 364] },
      null,
      [],
      [
        'alt',
        { sourceInterval: [350, 364] },
        ['terminal', { sourceInterval: [350, 353] }, '='],
        ['terminal', { sourceInterval: [360, 364] }, '!='],
      ],
    ],
    compareOp: [
      'define',
      { sourceInterval: [368, 419] },
      null,
      [],
      [
        'alt',
        { sourceInterval: [384, 419] },
        ['terminal', { sourceInterval: [384, 388] }, '>='],
        ['terminal', { sourceInterval: [395, 398] }, '>'],
        ['terminal', { sourceInterval: [405, 409] }, '<='],
        ['terminal', { sourceInterval: [416, 419] }, '<'],
      ],
    ],
    bool: [
      'define',
      { sourceInterval: [423, 450] },
      null,
      [],
      [
        'alt',
        { sourceInterval: [434, 450] },
        ['app', { sourceInterval: [434, 438] }, 'true', []],
        ['app', { sourceInterval: [445, 450] }, 'false', []],
      ],
    ],
    date: [
      'define',
      { sourceInterval: [456, 522] },
      null,
      [],
      [
        'seq',
        { sourceInterval: [467, 522] },
        ['app', { sourceInterval: [467, 472] }, 'digit', []],
        ['app', { sourceInterval: [473, 478] }, 'digit', []],
        ['app', { sourceInterval: [479, 484] }, 'digit', []],
        ['app', { sourceInterval: [485, 490] }, 'digit', []],
        ['terminal', { sourceInterval: [491, 494] }, '-'],
        ['app', { sourceInterval: [495, 500] }, 'digit', []],
        ['app', { sourceInterval: [501, 506] }, 'digit', []],
        ['terminal', { sourceInterval: [507, 510] }, '-'],
        ['app', { sourceInterval: [511, 516] }, 'digit', []],
        ['app', { sourceInterval: [517, 522] }, 'digit', []],
      ],
    ],
    and: [
      'define',
      { sourceInterval: [528, 560] },
      null,
      [],
      [
        'app',
        { sourceInterval: [538, 560] },
        'caseInsensitive',
        [['terminal', { sourceInterval: [554, 559] }, 'and']],
      ],
    ],
    or: [
      'define',
      { sourceInterval: [564, 594] },
      null,
      [],
      [
        'app',
        { sourceInterval: [573, 594] },
        'caseInsensitive',
        [['terminal', { sourceInterval: [589, 593] }, 'or']],
      ],
    ],
    true: [
      'define',
      { sourceInterval: [600, 634] },
      null,
      [],
      [
        'app',
        { sourceInterval: [611, 634] },
        'caseInsensitive',
        [['terminal', { sourceInterval: [627, 633] }, 'true']],
      ],
    ],
    false: [
      'define',
      { sourceInterval: [638, 674] },
      null,
      [],
      [
        'app',
        { sourceInterval: [650, 674] },
        'caseInsensitive',
        [['terminal', { sourceInterval: [666, 673] }, 'false']],
      ],
    ],
  },
]);
export default result;
